{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nimport topicsReducer from \"../features/topics/topicsSlice\";\nimport quizzesReducer from \"../features/quizzes/quizzesSlices\";\nimport cardsReducer from \"../features/cards/cardsSlice\";\n\n// Configure persist options\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['topics', 'quizzes', 'cards'] // Only persist these reducers\n};\n\n// Combine reducers\nconst rootReducer = combineReducers({\n  topics: topicsReducer,\n  quizzes: quizzesReducer,\n  cards: cardsReducer\n});\n\n// Create persisted reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Create store with persisted reducer\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n    }\n  })\n});\n\n// Create persistor\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","combineReducers","topicsReducer","quizzesReducer","cardsReducer","persistConfig","key","whitelist","rootReducer","topics","quizzes","cards","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/yannickfolla/Documents/projects/flashcards-starting-code-react-v18/src/app/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\n\nimport topicsReducer from \"../features/topics/topicsSlice\";\nimport quizzesReducer from \"../features/quizzes/quizzesSlices\";\nimport cardsReducer from \"../features/cards/cardsSlice\";\n\n// Configure persist options\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['topics', 'quizzes', 'cards'] // Only persist these reducers\n};\n\n// Combine reducers\nconst rootReducer = combineReducers({\n  topics: topicsReducer,\n  quizzes: quizzesReducer,\n  cards: cardsReducer,\n});\n\n// Create persisted reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Create store with persisted reducer\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n      },\n    }),\n});\n\n// Create persistor\nexport const persistor = persistStore(store);\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,OAAO;AAEvC,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,YAAY,MAAM,8BAA8B;;AAEvD;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXN,OAAO;EACPO,SAAS,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCQ,MAAM,EAAEP,aAAa;EACrBQ,OAAO,EAAEP,cAAc;EACvBQ,KAAK,EAAEP;AACT,CAAC,CAAC;;AAEF;AACA,MAAMQ,gBAAgB,GAAGb,cAAc,CAACM,aAAa,EAAEG,WAAW,CAAC;;AAEnE;AACA,MAAMK,KAAK,GAAGhB,cAAc,CAAC;EAC3BiB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;IACzD;EACF,CAAC;AACL,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAGrB,YAAY,CAACe,KAAK,CAAC;AAC5C,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}